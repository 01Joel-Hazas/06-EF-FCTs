//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Collections.Generic;
    
    public partial class Empresa : IEquatable<Empresa>
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Empresa()
        {
            this.FCTs = new HashSet<FCT>();
            this.OfertasFCTs = new HashSet<OfertasFCT>();
        }
    
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string TelefonoContacto { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FCT> FCTs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OfertasFCT> OfertasFCTs { get; set; }

        public Empresa(int id, string nombre, string telefonoContacto, ICollection<FCT> fCTs, ICollection<OfertasFCT> ofertasFCTs)
        {
            Id = id;
            Nombre = nombre;
            TelefonoContacto = telefonoContacto;
            FCTs = fCTs;
            OfertasFCTs = ofertasFCTs;
        }

        public override bool Equals(object obj)
        {
            return Equals(obj as Empresa);
        }

        public bool Equals(Empresa other)
        {
            return other != null &&
                   Id == other.Id &&
                   Nombre.ToLower() == other.Nombre.ToLower() &&
                   TelefonoContacto.ToLower() == other.TelefonoContacto.ToLower();
        }

        public override int GetHashCode()
        {
            int hashCode = 871037402;
            hashCode = hashCode * -1521134295 + Id.GetHashCode();
            hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(Nombre);
            hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(TelefonoContacto);
            return hashCode;
        }
    }
}
